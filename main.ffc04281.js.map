{"version":3,"sources":["scripts/main.js"],"names":["splitCamelCase","str","splitted","Array","from","i","length","letter","toUpperCase","join","labelPrototype","document","createElement","forms","querySelectorAll","form","inputs","input","label","cloneNode","className","htmlFor","id","innerText","name","inputContainer","closest","prepend","placeholder"],"mappings":";AAAA,aAuCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArCD,SAASA,EAAeC,GAGjB,IAFCC,IAAAA,EAAWC,MAAMC,KAAKH,GAEnBI,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAAK,CAClCE,IAAAA,EAASL,EAASG,GAEpBE,IAAWA,EAAOC,gBACpBN,EAASG,GAAK,IAAME,GAMjBL,OAFPA,EAAS,GAAKA,EAAS,GAAGM,cAEnBN,EAASO,KAAK,IAGvB,IAqBC,EArBKC,EAAiBC,SAASC,cAAc,SACxCC,EAAQF,SAASG,iBAAiB,QAErBD,EAAAA,EAAAA,GAkBlB,IAlByB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfE,IAAe,EAAfA,EAAe,EAAA,MAClBC,EAASD,EAAKD,iBAAiB,SAEjBE,EAAAA,EAAAA,GAHI,IAGI,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBC,IAAAA,EAAiB,EAAA,MACpBC,EAAQR,EAAeS,YAE7BD,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,UAAYvB,EAAeiB,EAAMO,MAEjCC,IAAAA,EAAiBR,EAAMS,QAAQ,OAErCD,EAAeE,QAAQT,GAEjBU,IAAAA,EAAc5B,EAAeiB,EAAMO,MAEzCP,EAAMW,YAAcA,GAhBE,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAkBzB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.ffc04281.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction splitCamelCase(str) {\n  const splitted = Array.from(str);\n\n  for (let i = 0; i < splitted.length; i++) {\n    const letter = splitted[i];\n\n    if (letter === letter.toUpperCase()) {\n      splitted[i] = ' ' + letter;\n    }\n  }\n\n  splitted[0] = splitted[0].toUpperCase();\n\n  return splitted.join('');\n}\n\nconst labelPrototype = document.createElement('label');\nconst forms = document.querySelectorAll('form');\n\nfor (const form of forms) {\n  const inputs = form.querySelectorAll('input');\n\n  for (const input of inputs) {\n    const label = labelPrototype.cloneNode();\n\n    label.className = 'field-label';\n    label.htmlFor = input.id;\n    label.innerText = splitCamelCase(input.name);\n\n    const inputContainer = input.closest('div');\n\n    inputContainer.prepend(label);\n\n    const placeholder = splitCamelCase(input.name);\n\n    input.placeholder = placeholder;\n  }\n}\n"]}